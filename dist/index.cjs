"use strict";var F=Object.create;var p=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var o=(n,e)=>p(n,"name",{value:e,configurable:!0});var O=(n,e)=>{for(var t in e)p(n,t,{get:e[t],enumerable:!0})},_=(n,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of D(e))!S.call(n,i)&&i!==t&&p(n,i,{get:()=>e[i],enumerable:!(r=P(e,i))||r.enumerable});return n};var g=(n,e,t)=>(t=n!=null?F(T(n)):{},_(e||!n||!n.__esModule?p(t,"default",{value:n,enumerable:!0}):t,n)),$=n=>_(p({},"__esModule",{value:!0}),n);var K={};O(K,{CanIEmailFetcher:()=>w});module.exports=$(K);var k=g(require("events"),1);var c={updateInterval:24,repoUrl:"https://github.com/hteumeuleu/caniemail"};var U=g(require("events"),1),x=require("js-yaml"),C=require("path");var l=class{static{o(this,"FeatureTypeChecker")}static isFeature(e){return e&&typeof e=="object"&&"slug"in e&&"title"in e&&"description"in e&&"url"in e&&"category"in e&&"tags"in e&&"keywords"in e&&"last_test_date"in e&&"test_url"in e&&"test_results_url"in e&&"stats"in e&&"notes"in e&&"notes_by_num"in e&&"links"in e}},u=class{static{o(this,"NicenamesTypeChecker")}static isNicenames(e){return e&&typeof e=="object"&&"family"in e&&"platform"in e&&"support"in e&&"category"in e}};var f=require("js-yaml");var I="\\ufeff?",B=typeof process<"u"?process.platform:"",H="^("+I+"(= yaml =|---)$([\\s\\S]*?)^(?:\\2|\\.\\.\\.)\\s*$"+(B==="win32"?"\\r?":"")+"(?:\\n)?)",G=new RegExp(H,"m");function L(n,e){let t=1,r=e.indexOf(`
`),i=n.index+n[0].length;for(;r!==-1;){if(r>=i)return t;t++,r=e.indexOf(`
`,r+1)}return t}o(L,"computeLocation");function E(n,e){let t=G.exec(n);if(!t)return{attributes:{},body:n,bodyBegin:1};let r=t?.[t.length-1]?.replace(/^\s+|\s+$/g,"");if(!r)return{attributes:{},body:n,bodyBegin:1};let i={};e?.ignoreDuplicateKeys?(0,f.loadAll)(r,s=>{i={...i,...s}},{json:!0}):i=(0,f.load)(r)||{};let b=n.replace(t[0],""),a=L(t,n);return{attributes:i,body:b,bodyBegin:a,frontmatter:r}}o(E,"frontmatterParse");var m=g(require("axios"),1);var y="https://api.github.com",V="2022-11-28",d=class{constructor(e){this.config=e;e.githubToken&&(this.githubToken=e.githubToken);let t=this.extractOwnerAndRepoFromGithubUrl(this.config?.repoUrl??c.repoUrl);if(t){let{owner:r,repo:i}=t;this.repoOwner=r,this.repoName=i}else throw new Error("Failed to extract owner and repo from URL")}static{o(this,"GithubFetchService")}repoOwner;repoName;githubToken;async isPermissiveLicense(){let e=`${y}/repos/${this.repoOwner}/${this.repoName}/license`;try{let t=await m.default.get(e,{headers:this.getAuthHeaders()});return["mit","unlicense","apache-2.0"].includes(t.data.license.key)}catch(t){return console.error("Error fetching license information:",t),!1}}async getLastUpdate(){let e=`${y}/repos/${this.repoOwner}/${this.repoName}/commits?per_page=1`;try{return(await m.default.get(e,{headers:this.getAuthHeaders()})).data[0].commit.committer.date}catch(t){return console.error("Error fetching last update:",t),null}}async getContent(e){let t=`${y}/repos/${this.repoOwner}/${this.repoName}/contents/${e}`;try{return(await m.default.get(t,{headers:{...this.getAuthHeaders(),Accept:"application/vnd.github.object+json"}})).data}catch(r){throw console.error("Error fetching file content from GitHub:",r),new Error("Failed to fetch file content")}}extractOwnerAndRepoFromGithubUrl(e){let t=new URL(e),r=t.hostname==="github.com"?t.pathname.split("/")[1]:null,i=t.pathname.split("/")[2];return r&&i?{owner:r,repo:i}:null}getAuthHeaders(){let e={Accept:"application/vnd.github+json","X-GitHub-Api-Version":V};return this.githubToken&&(e.Authorization=`Bearer ${this.githubToken}`),e}};var v="dataUpdated",h=class extends U.default{constructor(t){super();this.config=t;this.fetchService=new d(this.config),this.fetchApiResponse(),setInterval(()=>this.checkForUpdates(),36e5)}static{o(this,"UpdateService")}lastUpdate=null;fetchService;async checkForUpdates(){let t=new Date;(!this.lastUpdate||t.getTime()-this.lastUpdate.getTime()>(this.config.updateInterval||c.updateInterval)*36e5)&&(this.lastUpdate=t,this.fetchApiResponse())}async fetchApiResponse(){let t=await this.fetchNicenames(),r=await this.fetchFeatures();if(t&&r){let i={last_update_date:new Date().toISOString(),nicenames:t,data:r};this.emit(v,i)}}async fetchNicenames(){let t=await this.fetchService.getContent("_data/nicenames.yml");if(t.type==="file"&&t.content&&t.encoding==="base64"){let r=Buffer.from(t.content,t.encoding).toString("utf-8"),i=(0,x.load)(r);return u.isNicenames(i)?i:(console.error("Invalid nicenames data"),null)}else return console.error("Failed to fetch nicenames"),null}async fetchFeatures(){let t=await this.fetchService.getContent("_features");if(t.type==="dir"){let i=t.entries.filter(a=>a.type==="file"&&a.name.endsWith(".md")&&!a.name.startsWith("_"));return await Promise.all(i.map(async a=>{let s=await this.fetchService.getContent(a.path);if(s.type==="file"&&s.content&&s.encoding==="base64"){let N=Buffer.from(s.content,s.encoding).toString("utf-8"),A=E(N,{ignoreDuplicateKeys:!0}).attributes,R={slug:(0,C.basename)(s.name,".md"),description:null,url:"",tags:[],keywords:null,test_url:null,test_results_url:null,notes:null,notes_by_num:null,links:null,...typeof A=="object"?A:{}};return l.isFeature(R)?R:(console.error("Invalid feature data"),null)}return null})).then(a=>a.filter(s=>s!==null))}return[]}};var w=class{static{o(this,"CanIEmailFetcher")}updateService;eventEmitter;_currentApiResponse=null;constructor(e){this.updateService=new h(e),this.eventEmitter=new k.default,this.updateService.on(v,t=>{this._currentApiResponse=t,this.eventEmitter.emit("update",t)})}onUpdate(e){this.eventEmitter.on("update",e)}offUpdate(e){this.eventEmitter.off("update",e)}get currentApiResponse(){return this._currentApiResponse}get currentNicenames(){return this._currentApiResponse?.nicenames||null}};0&&(module.exports={CanIEmailFetcher});
//# sourceMappingURL=index.cjs.map