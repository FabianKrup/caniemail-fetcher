var R=Object.defineProperty;var o=(i,e)=>R(i,"name",{value:e,configurable:!0});import S from"events";var p={updateInterval:24,repoUrl:"https://github.com/hteumeuleu/caniemail"};import P from"events";import{load as D}from"js-yaml";import{basename as T}from"path";var c=class{static{o(this,"FeatureTypeChecker")}static isFeature(e){return e&&typeof e=="object"&&"slug"in e&&"title"in e&&"description"in e&&"url"in e&&"category"in e&&"tags"in e&&"keywords"in e&&"last_test_date"in e&&"test_url"in e&&"test_results_url"in e&&"stats"in e&&"notes"in e&&"notes_by_num"in e&&"links"in e}},l=class{static{o(this,"NicenamesTypeChecker")}static isNicenames(e){return e&&typeof e=="object"&&"family"in e&&"platform"in e&&"support"in e&&"category"in e}};import{load as _,loadAll as E}from"js-yaml";var U="\\ufeff?",x=typeof process<"u"?process.platform:"",C="^("+U+"(= yaml =|---)$([\\s\\S]*?)^(?:\\2|\\.\\.\\.)\\s*$"+(x==="win32"?"\\r?":"")+"(?:\\n)?)",k=new RegExp(C,"m");function N(i,e){let t=1,n=e.indexOf(`
`),r=i.index+i[0].length;for(;n!==-1;){if(n>=r)return t;t++,n=e.indexOf(`
`,n+1)}return t}o(N,"computeLocation");function w(i,e){let t=k.exec(i);if(!t)return{attributes:{},body:i,bodyBegin:1};let n=t?.[t.length-1]?.replace(/^\s+|\s+$/g,"");if(!n)return{attributes:{},body:i,bodyBegin:1};let r={};e?.ignoreDuplicateKeys?E(n,s=>{r={...r,...s}},{json:!0}):r=_(n)||{};let g=i.replace(t[0],""),a=N(t,i);return{attributes:r,body:g,bodyBegin:a,frontmatter:n}}o(w,"frontmatterParse");import m from"axios";var d="https://api.github.com",F="2022-11-28",u=class{constructor(e){this.config=e;e.githubToken&&(this.githubToken=e.githubToken);let t=this.extractOwnerAndRepoFromGithubUrl(this.config?.repoUrl??p.repoUrl);if(t){let{owner:n,repo:r}=t;this.repoOwner=n,this.repoName=r}else throw new Error("Failed to extract owner and repo from URL")}static{o(this,"GithubFetchService")}repoOwner;repoName;githubToken;async isPermissiveLicense(){let e=`${d}/repos/${this.repoOwner}/${this.repoName}/license`;try{let t=await m.get(e,{headers:this.getAuthHeaders()});return["mit","unlicense","apache-2.0"].includes(t.data.license.key)}catch(t){return console.error("Error fetching license information:",t),!1}}async getLastUpdate(){let e=`${d}/repos/${this.repoOwner}/${this.repoName}/commits?per_page=1`;try{return(await m.get(e,{headers:this.getAuthHeaders()})).data[0].commit.committer.date}catch(t){return console.error("Error fetching last update:",t),null}}async getContent(e){let t=`${d}/repos/${this.repoOwner}/${this.repoName}/contents/${e}`;try{return(await m.get(t,{headers:{...this.getAuthHeaders(),Accept:"application/vnd.github.object+json"}})).data}catch(n){throw console.error("Error fetching file content from GitHub:",n),new Error("Failed to fetch file content")}}extractOwnerAndRepoFromGithubUrl(e){let t=new URL(e),n=t.hostname==="github.com"?t.pathname.split("/")[1]:null,r=t.pathname.split("/")[2];return n&&r?{owner:n,repo:r}:null}getAuthHeaders(){let e={Accept:"application/vnd.github+json","X-GitHub-Api-Version":F};return this.githubToken&&(e.Authorization=`Bearer ${this.githubToken}`),e}};var h="dataUpdated",f=class extends P{constructor(t){super();this.config=t;this.fetchService=new u(this.config),this.fetchApiResponse(),setInterval(()=>this.checkForUpdates(),36e5)}static{o(this,"UpdateService")}lastUpdate=null;fetchService;async checkForUpdates(){let t=new Date;(!this.lastUpdate||t.getTime()-this.lastUpdate.getTime()>(this.config.updateInterval||p.updateInterval)*36e5)&&(this.lastUpdate=t,this.fetchApiResponse())}async fetchApiResponse(){let t=await this.fetchNicenames(),n=await this.fetchFeatures();if(t&&n){let r={last_update_date:new Date().toISOString(),nicenames:t,data:n};this.emit(h,r)}}async fetchNicenames(){let t=await this.fetchService.getContent("_data/nicenames.yml");if(t.type==="file"&&t.content&&t.encoding==="base64"){let n=Buffer.from(t.content,t.encoding).toString("utf-8"),r=D(n);return l.isNicenames(r)?r:(console.error("Invalid nicenames data"),null)}else return console.error("Failed to fetch nicenames"),null}async fetchFeatures(){let t=await this.fetchService.getContent("_features");if(t.type==="dir"){let r=t.entries.filter(a=>a.type==="file"&&a.name.endsWith(".md")&&!a.name.startsWith("_"));return await Promise.all(r.map(async a=>{let s=await this.fetchService.getContent(a.path);if(s.type==="file"&&s.content&&s.encoding==="base64"){let A=Buffer.from(s.content,s.encoding).toString("utf-8"),y=w(A,{ignoreDuplicateKeys:!0}).attributes,v={slug:T(s.name,".md"),description:null,url:"",tags:[],keywords:null,test_url:null,test_results_url:null,notes:null,notes_by_num:null,links:null,...typeof y=="object"?y:{}};return c.isFeature(v)?v:(console.error("Invalid feature data"),null)}return null})).then(a=>a.filter(s=>s!==null))}return[]}};var b=class{static{o(this,"CanIEmailFetcher")}updateService;eventEmitter;_currentApiResponse=null;constructor(e){this.updateService=new f(e),this.eventEmitter=new S,this.updateService.on(h,t=>{this._currentApiResponse=t,this.eventEmitter.emit("update",t)})}onUpdate(e){this.eventEmitter.on("update",e)}offUpdate(e){this.eventEmitter.off("update",e)}get currentApiResponse(){return this._currentApiResponse}get currentNicenames(){return this._currentApiResponse?.nicenames||null}};export{b as CanIEmailFetcher};
//# sourceMappingURL=index.js.map